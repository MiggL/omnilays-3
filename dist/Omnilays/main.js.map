{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/omnilays.current.widget.html","webpack:///./src/app/dashboard/omnilays.current.widget.ts","webpack:///./src/app/dashboard/omnilays.dashboard.html","webpack:///./src/app/dashboard/omnilays.dashboard.ts","webpack:///./src/app/dashboard/omnilays.match.widget.component.html","webpack:///./src/app/dashboard/omnilays.match.widget.component.ts","webpack:///./src/app/graphql.module.ts","webpack:///./src/app/matchscreen/omnilays.matchscreen.html","webpack:///./src/app/matchscreen/omnilays.matchscreen.ts","webpack:///./src/app/matchservice/omnilays.match.service.ts","webpack:///./src/app/mock-games.ts","webpack:///./src/app/omnilays.match.model.ts","webpack:///./src/app/omnilays.player.model.ts","webpack:///./src/app/omnilays.routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,6F;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,qBAAqB,CAEjC;IAAD,4BAAC;CAAA;AAFiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPwB;AACjB;AAEyB;AACV;AACY;AACM;AACL;AACpB;AACO;AACM;AACM;AACd;AACoB;AACD;AAkCzE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAqB;gBACrB,gFAAkB;gBAClB,sFAAoB;gBACpB,uFAAW;gBACX,sFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,8EAAqB;gBACrB,6DAAa;gBACb,qEAAgB;gBAChB,4DAAY;gBACZ,wEAAc;aACf;YACD,SAAS,EAAE,CAAC,iFAAY;gBACtB;oBACE,OAAO,EAAE,8DAAc;oBACvB,UAAU,YAAC,QAAkB;wBAC3B,OAAO;4BACL,KAAK,EAAE,IAAI,oEAAa,EAAE;4BAC1B,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC;gCACpB,GAAG,EAAE,gCAAgC;6BACtC,CAAC;yBACH;oBACH,CAAC;oBACD,IAAI,EAAE,CAAC,kEAAQ,CAAC;iBACjB;aACF;YACD,SAAS,EAAE,CAAC,oEAAqB,CAAC;SACnC,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChDtB,kDAAkD,6CAA6C,GAAG,6CAA6C,oBAAoB,gDAAgD,gBAAgB,6CAA6C,GAAG,6CAA6C,c;;;;;;;;;;;;;;;;;;ACA5P;AACE;AAOtE;IAMI,4BAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAE7C,CAAC;IAED,qCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;IAC3D,CAAC;IAED,4CAAe,GAAf;QACI,OAAO,IAAI,CAAC,YAAY;IAC5B,CAAC;IAED,4CAAe,GAAf,UAAgB,OAAe;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC;IAC/D,CAAC;IApBQ,kBAAkB;QAJ9B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,uHAA6C;SAChD,CAAC;+EAOmC,iFAAY;OANpC,kBAAkB,CAsB9B;IAAD,yBAAC;CAAA;AAtB8B;;;;;;;;;;;;ACR/B,yXAAyX,UAAU,uF;;;;;;;;;;;;;;;;;;ACAtT;AACP;AAQtE;IAKI,4BAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAH7C,YAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;IAKvC,CAAC;IAGF,qCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;IAC3D,CAAC;IAED,mCAAM,GAAN;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;IAC3D,CAAC;IAED,wCAAW,GAAX,UAAY,EAAU;QAClB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;QAClF,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,EAAE;IACjB,CAAC;IAtBQ,kBAAkB;QAJ9B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,6GAAwC;SAC3C,CAAC;+EAMmC,iFAAY;OALpC,kBAAkB,CA6B9B;IAAD,yBAAC;CAAA;AA7B8B;;;;;;;;;;;;ACT/B,qKAAqK,UAAU,uC;;;;;;;;;;;;;;;;;;ACA9H;AACqB;AAStE;IAEI,qBAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAE7C,CAAC;IAJQ,WAAW;QANvB,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,uIAAqD;YACrD,SAAS,EAAE,CAAC,iFAAY,CAAC;SAC5B,CAAC;+EAImC,iFAAY;OAFpC,WAAW,CAavB;IAAD,kBAAC;CAAA;AAbuB;;;;;;;;;;;;;;;;;;;;;;ACVe;AACqB;AACM;AACd;AAEpD,IAAM,GAAG,GAAG,gCAAgC,CAAC,CAAC,6CAA6C;AACpF,SAAS,YAAY,CAAC,QAAkB;IAC7C,OAAO;QACL,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,OAAC,CAAC;QAC5B,KAAK,EAAE,IAAI,mEAAa,EAAE;KAC3B,CAAC;AACJ,CAAC;AAYD;IAAA;IAA4B,CAAC;IAAhB,aAAa;QAVzB,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,2DAAY,EAAE,uEAAc,CAAC;YACvC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,6DAAc;oBACvB,UAAU,EAAE,YAAY;oBACxB,IAAI,EAAE,CAAC,iEAAQ,CAAC;iBACjB;aACF;SACF,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;ACvB1B,gDAAgD,2BAA2B,eAAe,2BAA2B,M;;;;;;;;;;;;;;;;;;ACA5D;AACa;AAUtE;IAII,8BAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAQ7C,UAAK,GAAG,aAAa;IANrB,CAAC;IAED,uCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;IAC3D,CAAC;IAID,qCAAM,GAAN;IAEA,CAAC;IAhBQ,oBAAoB;QANhC,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,mHAA0C;YAC1C,MAAM,EAAE,CAAC,cAAc,CAAC;SAC3B,CAAC;+EAMmC,iFAAY;OAJpC,oBAAoB,CAiBhC;IAAD,2BAAC;CAAA;AAjBgC;;;;;;;;;;;;;;;;;;;ACXS;AAIF;AAMxC;IAII;QACI,IAAI,CAAC,YAAY,GAAG,mDAAO,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAED,sCAAe,GAAf;QACI,OAAO,IAAI,CAAC,YAAY;IAC5B,CAAC;IAGD,iCAAU,GAAV;QACI,OAAO,mDAAO,CAAC;IACnB,CAAC;IAED,mCAAY,GAAZ,UAAa,EAAU;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,mDAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,mDAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,mDAAO,CAAC,CAAC,CAAC;gBAC9B,OAAO,mDAAO,CAAC,CAAC,CAAC;aACpB;SACJ;IACL,CAAC;IAED,sCAAe,GAAf,UAAgB,EAAU;QACtB,IAAI,CAAC,YAAY,GAAG,mDAAO,CAAC,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC;IA7BQ,YAAY;QAHxB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;;OACW,YAAY,CA8BxB;IAAD,mBAAC;CAAA;AA9BwB;;;;;;;;;;;;;ACVzB;AAAA;AAAA;AAAA;AAA+C;AACE;AAE1C,IAAM,OAAO,GAAY;IAC5B,IAAI,2DAAK,CAAC,CAAC,EAAE,IAAI,6DAAM,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,IAAI,6DAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;IAC1E,IAAI,2DAAK,CAAC,CAAC,EAAE,IAAI,6DAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,6DAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,eAAe,CAAC;IACpF,IAAI,2DAAK,CAAC,CAAC,EAAE,IAAI,6DAAM,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,IAAI,6DAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,cAAc,CAAC;IACrF,IAAI,2DAAK,CAAC,CAAC,EAAE,IAAI,6DAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,6DAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,gBAAgB,CAAC;IACrF,IAAI,2DAAK,CAAC,CAAC,EAAE,IAAI,6DAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,6DAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC;CACjF;;;;;;;;;;;;;ACPD;AAAA;AAAA;IACI,eAAoB,EAAU,EAAS,OAAe,EAAS,OAAe,EAAS,eAAuB;QAA1F,OAAE,GAAF,EAAE,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAQ;IAAI,CAAC;IACrH,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACJH;AAAA;AAAA;IACI,gBAAoB,IAAY,EAAS,IAAY;QAAjC,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;IAAI,CAAC;IAC5D,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACC;AACY;AACM;AAE1E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAqB;KACjC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,sFAAoB;KAChC;CACF,CAAC;AAEK,IAAM,qBAAqB,GAAwB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACtBvF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<a routerLink=\\\"dashboard\\\">Dashboard</a>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class OmnilaysMainComponent {\n  title = 'Omnilays';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { OmnilaysRoutingModule } from './omnilays.routing.module';\nimport { OmnilaysMainComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/omnilays.dashboard';\nimport { MatchScreenComponent } from './matchscreen/omnilays.matchscreen';\nimport { MatchService } from './matchservice/omnilays.match.service';\nimport { GraphQLModule } from './graphql.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { MatchWidget } from './dashboard/omnilays.match.widget.component';\nimport { CurrentMatchWidget } from './dashboard/omnilays.current.widget';\n\n@NgModule({\n  declarations: [\n    OmnilaysMainComponent,\n    DashboardComponent,\n    MatchScreenComponent,\n    MatchWidget,\n    CurrentMatchWidget\n  ],\n  imports: [\n    BrowserModule,\n    OmnilaysRoutingModule,\n    GraphQLModule,\n    HttpClientModule,\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [MatchService,\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory(httpLink: HttpLink) {\n        return {\n          cache: new InMemoryCache(),\n          link: httpLink.create({\n            uri: 'https://api.smash.gg/gql/alpha'\n          })\n        }\n      },\n      deps: [HttpLink]\n    }\n  ],\n  bootstrap: [OmnilaysMainComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div id=\\\"current\\\">\\n    <h2>{{matchService.getCurrentMatch().player1.name}} {{matchService.getCurrentMatch().player1.land}}</h2> \\n    <p>in {{matchService.getCurrentMatch().tournamentRound}}</p>\\n    <h2>{{matchService.getCurrentMatch().player2.name}} {{matchService.getCurrentMatch().player2.land}}</h2>\\n</div>\"","import { Component, OnChanges, Input, OnInit } from \"@angular/core\";\nimport { MatchService } from \"../matchservice/omnilays.match.service\";\nimport { Match } from '../omnilays.match.model';\n\n@Component({\n    selector: 'currentmatch',\n    templateUrl: './omnilays.current.widget.html'\n})\nexport class CurrentMatchWidget implements OnInit{\n\n    currentMatchID: number\n    clickedMatch: Match\n    currentMatch: Match\n\n    constructor(private matchService:MatchService) { \n        \n    }\n\n    ngOnInit() {\n        this.currentMatch = this.matchService.getCurrentMatch()\n    }\n\n    getCurrentMatch() {\n        return this.currentMatch\n    }\n\n    setClickedMatch(clicked: number) {\n        this.currentMatch = this.matchService.getMatchByID(clicked)\n    }\n\n}","module.exports = \"<div id=\\\"nav\\\">\\n    <ul>\\n        <li><a routerLink=\\\"../dashboard\\\">Dashboard</a></li>\\n        <li><a routerLink=\\\"../matchscreen\\\">Matchscreen</a></li>\\n    </ul>\\n</div>\\n\\n<currentmatch></currentmatch>\\n\\n<div>\\n    <li class=\\\"matchSelector\\\" *ngFor=\\\"let match of matches\\\">\\n        <button (click)=\\\"changeMatch(match.id)\\\" mat-button>Send match {{match.id}} to stream</button>\\n    </li>\\n</div>\\n\\n<button (click)=\\\"Update()\\\">Update</button>\"","import { Component, OnInit, Input, OnChanges, DoCheck } from \"@angular/core\";\nimport { MatchService } from \"../matchservice/omnilays.match.service\";\nimport { Match } from '../omnilays.match.model';\nimport { MatchScreenComponent } from '../matchscreen/omnilays.matchscreen';\n\n@Component({\n    selector: 'dashboard',\n    templateUrl: './omnilays.dashboard.html'\n})\nexport class DashboardComponent implements OnInit{\n\n    matches = this.matchService.getMatches()\n    currentMatch: Match\n\n    constructor(private matchService:MatchService) {\n        \n     }\n\n\n    ngOnInit() {\n        this.currentMatch = this.matchService.getCurrentMatch()\n    }\n\n    Update(){\n        this.currentMatch = this.matchService.getCurrentMatch()\n    }\n\n    changeMatch(id: number) {\n        console.log(\"changed match to \" + this.matchService.getMatchByID(id).player1.name)\n        this.matchService.setCurrentMatch(id)\n        this.Update()\n    }\n\n    // ngOnInit(){\n    //     this.player1 = this.matchService.getMatchByID(1).player1.name;\n    //     this.title = \"Runboard\"\n    //     this.player2 = this.matchService.getMatchByID(1).player2.name;\n    // }\n}","module.exports = \"<div>\\n    <li class=\\\"matchSelector\\\" *ngFor=\\\"let match of matches\\\">\\n        <button (click)=\\\"changeMatch(match.id)\\\" mat-button>Send match {{match.id}} to stream</button>\\n    </li>\\n</div>\"","import { Component, Input } from \"@angular/core\";\nimport { MatchService } from \"../matchservice/omnilays.match.service\";\nimport { Match } from '../omnilays.match.model';\n\n@Component({\n    selector: 'matchwidget',\n    templateUrl: './omnilays.match.widget.component.html',\n    providers: [MatchService]\n})\n\nexport class MatchWidget {\n\n    constructor(private matchService:MatchService) {\n\n    }\n\n    // matches = this.matchService.getMatches()\n\n    // public changeMatch(id) {\n    //     this.matchService.setClickedMatch(id)\n    //     console.log(\"match changed to\" + id.toString())\n    //     console.log(this.matchService.currentMatch.player1.name)\n    // }\n}","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nconst uri = 'https://api.smash.gg/gql/alpha'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink) {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","module.exports = \"<h1>Current match</h1>\\n<h2>{{currentMatch.player1.name}}</h2> vs <h2>{{currentMatch.player2.name}}</h2>\"","import { Component, Input, OnInit } from \"@angular/core\";\nimport { MatchService } from \"../matchservice/omnilays.match.service\";\nimport { Match } from '../omnilays.match.model';\nimport { DashboardComponent } from '../dashboard/omnilays.dashboard';\n\n@Component({\n    selector: 'matchscreen',\n    templateUrl: './omnilays.matchscreen.html',\n    inputs: [\"currentMatch\"]\n})\n\nexport class MatchScreenComponent implements OnInit{\n\n    currentMatch: Match\n\n    constructor(private matchService:MatchService) {\n        \n    }\n\n    ngOnInit() {\n        this.currentMatch = this.matchService.getCurrentMatch()\n    }\n\n    title = \"Matchscreen\"\n\n    Update() {\n\n    }\n}","import { Injectable} from '@angular/core';\nimport { Player } from '../omnilays.player.model';\nimport { Match } from '../omnilays.match.model';\n\nimport { MATCHES } from '../mock-games';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MatchService{\n    \n    currentMatch: Match\n\n    constructor() {\n        this.currentMatch = MATCHES[0]\n        console.log(\"matchservice instance\")\n    }\n\n    getCurrentMatch() {\n        return this.currentMatch\n    }\n\n\n    getMatches() {\n        return MATCHES;\n    }\n\n    getMatchByID(id: number) {\n        for (var i = 0; i <= MATCHES.length - 1; i++) {\n            if (MATCHES[i].id === id) {\n                this.currentMatch = MATCHES[i]\n                return MATCHES[i]\n            }\n        }\n    }\n\n    setCurrentMatch(id: number) {\n        this.currentMatch = MATCHES[id - 1]\n    }\n}","import { Match } from \"./omnilays.match.model\";\nimport { Player } from './omnilays.player.model';\n\nexport const MATCHES: Match[] = [\n    new Match(1, new Player(\"Neophos\", \"SE\"), new Player(\"Hogge\", \"SE\"), \"GF\"),\n    new Match(2, new Player(\"jerry\", \"SE\"), new Player(\"Akkare\", \"DK\"), \"Round 2 pools\"),\n    new Match(3, new Player(\"Svampen\", \"SE\"), new Player(\"Mighty\", \"NO\"), \"Losers semis\"),\n    new Match(4, new Player(\"Daigo\", \"JP\"), new Player(\"Itazan\", \"JP\"), \"Winners finals\"),\n    new Match(5, new Player(\"JWong\", \"US\"), new Player(\"Jaffar\", \"SE\"), \"Round 3\")\n]","import { Player } from './omnilays.player.model';\n\nexport class Match {\n    constructor (public id: number, public player1: Player, public player2: Player, public tournamentRound: string) { }\n  }","export class Player {\n    constructor (public name: string, public land: string) { }\n  }","import { NgModule } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OmnilaysMainComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/omnilays.dashboard';\nimport { MatchScreenComponent } from './matchscreen/omnilays.matchscreen';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OmnilaysMainComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'matchscreen',\n    component: MatchScreenComponent\n  }\n];\n\nexport const OmnilaysRoutingModule: ModuleWithProviders = RouterModule.forRoot(routes);","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}